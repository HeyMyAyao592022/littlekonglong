C51 COMPILER V9.60.7.0   LCD12864                                                          06/13/2023 13:03:32 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD12864
OBJECT MODULE PLACED IN .\Objects\lcd12864.obj
COMPILER INVOKED BY: D:\2023stuffs\Keil\C51\BIN\C51.EXE lcd12864.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\L
                    -istings\lcd12864.lst) TABS(2) OBJECT(.\Objects\lcd12864.obj)

line level    source

   1          /*
   2           * LCD128*64
   3           */
   4          
   5          #include "lcd12864.h"
   6          
   7          void chekbusy12864(void)
   8          {
   9   1        uint8 dat;
  10   1      
  11   1        RS = 0;
  12   1        RW = 1;
  13   1        do
  14   1        {
  15   2          P2 = 0;
  16   2          E = 1;
  17   2          _nop_();
  18   2          dat = P2 & 0x80;
  19   2          E = 0;
  20   2        } while (dat != 0);
  21   1      }
  22          
  23          void choose12864(uint8 i)
  24          {
  25   1        switch (i)
  26   1        {
  27   2        case 0:
  28   2          CS1 = 0;
  29   2          CS2 = 1;
  30   2          break;
  31   2        case 1:
  32   2          CS1 = 1;
  33   2          CS2 = 0;
  34   2          break;
  35   2      
  36   2        default:
  37   2          break;
  38   2        }
  39   1      }
  40          
  41          void cmd_w12864(uint8 cmd)
  42          {
  43   1        chekbusy12864();
  44   1      
  45   1        RS = 0;
  46   1        RW = 0;
  47   1        _nop_();
  48   1        E = 1;
  49   1        _nop_();
  50   1        P2 = cmd;
  51   1        _nop_();
  52   1        E = 0;
  53   1      }
  54          
C51 COMPILER V9.60.7.0   LCD12864                                                          06/13/2023 13:03:32 PAGE 2   

  55          void dat_w12864(uint8 dat)
  56          {
  57   1        chekbusy12864();
  58   1      
  59   1        RS = 1;
  60   1        RW = 0;
  61   1        _nop_();
  62   1        E = 1;
  63   1        _nop_();
  64   1        P2 = dat;
  65   1        _nop_();
  66   1        E = 0;
  67   1      }
  68          
  69          void clear12864(void)
  70          {
  71   1        uint8 page, row;
  72   1      
  73   1        // ÈÄâÊã©Â∑¶Â±è
  74   1        choose12864(0);
  75   1        // ÈÅçÂéÜ 8 È°µ
  76   1        for (page = 0; page < 8; page++)
  77   1        {
  78   2          cmd_w12864(0xb8 + page);
  79   2          cmd_w12864(0x40);
  80   2          for (row = 0; row < 64; row++)
  81   2          {
  82   3      
  83   3            dat_w12864(0x00);
  84   3          }
  85   2        }
  86   1      
  87   1        choose12864(1);
  88   1        for (page = 0; page < 8; page++)
  89   1        {
  90   2          cmd_w12864(0xb8 + page);
  91   2          cmd_w12864(0x40);
  92   2          for (row = 0; row < 64; row++)
  93   2          {
  94   3            dat_w12864(0x00);
  95   3          }
  96   2        }
  97   1      }
  98          
  99          void LCD_init(void)
 100          {
 101   1        chekbusy12864();
 102   1        cmd_w12864(0xc0);
 103   1        cmd_w12864(0x3f);
 104   1        clear12864();
 105   1      }
 106          
 107          void play8(uint8 x, uint8 y, uint8 *addr)
 108          {
 109   1        uint8 i;
 110   1      
 111   1        // x>63ÔºåËØ¥Êòé x Âú®Âè≥ËæπÔºåÈÄâÊã©Âè≥Â±è
 112   1        if (x > 63)
 113   1        {
 114   2          choose12864(1);
 115   2          x = x - 64;
 116   2        }
C51 COMPILER V9.60.7.0   LCD12864                                                          06/13/2023 13:03:32 PAGE 3   

 117   1        else
 118   1          choose12864(0);
 119   1      
 120   1        // ÂÜôÂÖ• x,y ‰ΩçÁΩÆ
 121   1        cmd_w12864(0x40 | x);
 122   1        cmd_w12864(0xb8 | (y++));
 123   1      
 124   1        // Á°Æ‰øù y Á¨¨ÂÖ´‰Ωç‰∏∫ 0
 125   1        if ((y & 0x80) == 0)
 126   1          // ÂÜôÂÖ• 8 ‰∏™ 8 ‰ΩçÁöÑ 16 ËøõÂà∂Êï∞ÊçÆ
 127   1          for (i = 0; i < 8; i++)
 128   1            dat_w12864(*addr++);
 129   1        else
 130   1          for (i = 0; i < 8; i++)
 131   1            dat_w12864(0xFF - *addr++);
 132   1      
 133   1        // ÂÜôÂÖ• x, y + 1
 134   1        cmd_w12864(0x40 | x);
 135   1        cmd_w12864(0xb8 | y);
 136   1      
 137   1        if ((y & 0x80) == 0)
 138   1          for (i = 0; i < 8; i++)
 139   1            dat_w12864(*addr++);
 140   1        else
 141   1          for (i = 0; i < 8; i++)
 142   1            dat_w12864(0xFF - *addr++);
 143   1      }
 144          
 145          void play16(uint8 x, uint8 y, uint8 *addr)
 146          {
 147   1        uint8 i;
 148   1      
 149   1        if (x > 63)
 150   1        {
 151   2          choose12864(1);
 152   2          x = x - 64;
 153   2        }
 154   1        else
 155   1          choose12864(0);
 156   1      
 157   1        cmd_w12864(0x40 | x);
 158   1        cmd_w12864(0xb8 | (y++));
 159   1      
 160   1        if ((y & 0x80) == 0)
 161   1          for (i = 0; i < 16; i++)
 162   1            dat_w12864(*addr++);
 163   1        else
 164   1          for (i = 0; i < 16; i++)
 165   1            dat_w12864(0xFF - *addr++);
 166   1      
 167   1        cmd_w12864(0x40 | x);
 168   1        cmd_w12864(0xb8 | y);
 169   1      
 170   1        if ((y & 0x80) == 0)
 171   1          for (i = 0; i < 16; i++)
 172   1            dat_w12864(*addr++);
 173   1        else
 174   1          for (i = 0; i < 16; i++)
 175   1            dat_w12864(0xFF - *addr++);
 176   1      }
 177          
 178          void drawPicture8(uint8 x, uint8 y, uint8 *addr)
C51 COMPILER V9.60.7.0   LCD12864                                                          06/13/2023 13:03:32 PAGE 4   

 179          {
 180   1        uint8 i;
 181   1      
 182   1        // x>63ÔºåËØ¥Êòé x Âú®Âè≥ËæπÔºåÈÄâÊã©Âè≥Â±è
 183   1        if (x > 63)
 184   1        {
 185   2          choose12864(1);
 186   2          x = x - 64;
 187   2        }
 188   1        else
 189   1          choose12864(0);
 190   1      
 191   1        // ÂÜôÂÖ• x,y ‰ΩçÁΩÆ
 192   1        cmd_w12864(0x40 | x);
 193   1        cmd_w12864(0xb8 | (y++));
 194   1      
 195   1        // Á°Æ‰øù y Á¨¨ÂÖ´‰Ωç‰∏∫ 0
 196   1        if ((y & 0x80) == 0)
 197   1          // ÂÜôÂÖ• 8 ‰∏™ 8 ‰ΩçÁöÑ 16 ËøõÂà∂Êï∞ÊçÆ
 198   1          for (i = 0; i < 8; i++)
 199   1            dat_w12864(*addr++);
 200   1        else
 201   1          for (i = 0; i < 8; i++)
 202   1            dat_w12864(0xFF - *addr++);
 203   1      
 204   1        // ÂÜôÂÖ• x, y + 1
 205   1        cmd_w12864(0x40 | x);
 206   1        cmd_w12864(0xb8 | y);
 207   1      
 208   1        if ((y & 0x80) == 0)
 209   1          for (i = 0; i < 8; i++)
 210   1            dat_w12864(*addr++);
 211   1        else
 212   1          for (i = 0; i < 8; i++)
 213   1            dat_w12864(0xFF - *addr++);
 214   1      }
 215          
 216          /**
 217           * @brief
 218           * ÂõæÂÉèÁöÑ y ÂùêÊ†áÂπ∂‰∏çÊòØÂ±èÂπïÁöÑÂÆûÈôÖ y ÂùêÊ†áÔºåÂ±èÂπïÁ∫µÊñπÂêëË¢´ÂàÜ‰∏∫‰∫Ü 8 ÊÆµÔºåÊØèÊÆµÊúâ 8 Ë
             -°åÔºåÂÖ± 64 ‰∏™ÂÉèÁ¥†„ÄÇ
 219           * Êàë‰ª¨ÊØèÊ¨°ÂêëÂ±èÂπïÂÜôÂÖ•‰∏Ä‰∏™ 8‰Ωç16ËøõÂà∂Êï∞ÊçÆÔºåÈÇ£Ëøô‰∏™Êï∞ÊçÆÂ∞±‰ºöÂú®Â±èÂπï‰∏äÂΩ¢Êàê Á∫µÊñπÂê
             -ëÁöÑ8‰∏™Â∞èÁÇπ„ÄÇÔºàÂàöÂ•ΩÊòØ 16x16 ÂõæÂÉèÈ´òÂ∫¶ÁöÑ‰∏ÄÂçäÔºâ
 220           * ‰∏ÄËà¨Êàë‰ª¨Ë¶ÅÂú® Ôºàscreen_x,screen_y) ÁöÑÂú∞ÊñπÂÜôÂÖ• 16x16 ÁöÑÂõæÁâáÔºå
 221           * ÈÉΩÊòØÂÖàÂú® (screen_x,screen_y)ÂÜô‰∏äÂçäÈÉ®ÂàÜÔºåÂÜôÂÖ• 8 ‰∏™8‰Ωç16ËøõÂà∂Êï∞ÊçÆÔºåÊûÑÊàêÂõæÂÉèÁöÑ‰∏äÂç
             -äÈÉ®ÂàÜÔºå
 222           * ÁÑ∂ÂêéÂÜçÂú® (screen_x,screen_y + 1)ÂÜôÂÖ•‰∏ãÂçäÈÉ®ÂàÜ„ÄÇ
 223           * ÂÅáÂ¶ÇÂõæÂÉèÁöÑ y ÂùêÊ†áÂàöÂ•ΩÊòØ 8 ÁöÑÂÄçÊï∞ÔºåÊØîÂ¶Ç 16ÔºåÈÇ£ 16x16 ÁöÑÂõæÂÉèÂàöÂ•ΩÂèØ‰ª•Ë¢´ÊîæÂú®Â±è
             -Âπï y ÂùêÊ†á‰∏∫ 2 ÁöÑ‰ΩçÁΩÆ„ÄÇ
 224           * Â¶ÇÊûúÂõæÂÉèÁöÑ y ÂùêÊ†á‰∏çÊòØ 8 ÁöÑÂÄçÊï∞ÔºåÊØîÂ¶Ç 18ÔºåÈÇ£Êàë‰ª¨Â∞±ÈúÄË¶ÅÊääÂõæÂÉèÂàÜÊàê 3 ÊÆµÔºåÂπ∂È
             -ÄöËøáË¥üË¥£ÁöÑËøêÁÆóÊääÂõæÂÉèÊîæÂà∞Â±èÂπï‰∏ä„ÄÇ
 225           *
 226           * @param x 0~127
 227           * @param y 0~63
 228           * @param addr
 229           * @param dir_horizon
 230           * @param dir_vertical
 231           */
 232          void drawPicture16(uint8 x, uint8 y, uint8 *addr, int8 dir_horizon, int8 dir_vertical)
 233          {
 234   1      
 235   1        int8 screen_y = y / 8;     // ÁÆóÂá∫ y ÂØπÂ∫îÂ±èÂπïÁöÑ y ÂùêÊ†á
C51 COMPILER V9.60.7.0   LCD12864                                                          06/13/2023 13:03:32 PAGE 5   

 236   1        int8 offset_y = 8 - (y % 8); // ÁÆóÂá∫ y ÂØπ screen_y ÁöÑÂÅèÁßª
 237   1      
 238   1        uint8 i;
 239   1        uint8 crossingScreen = 0;
 240   1      
 241   1        if (x > 47 && x < 63)
 242   1        {
 243   2          switch (dir_horizon)
 244   2          {
 245   3          case DIR_LEFT:
 246   3            crossingScreen = 1;
 247   3            break;
 248   3          case DIR_RIGHT:
 249   3            crossingScreen = 2;
 250   3            break;
 251   3          default:
 252   3            break;
 253   3          }
 254   2        }
 255   1      
 256   1        if (x > 63)
 257   1        {
 258   2          choose12864(1);
 259   2          x = x - 64;
 260   2        }
 261   1        else if (x == 63)
 262   1        {
 263   2          choose12864(1);
 264   2          x = 0;
 265   2        }
 266   1        else
 267   1          choose12864(0);
 268   1      
 269   1        // offset ‰∏∫ 0 Â∞±Ê≠£Â∏∏ÊòæÁ§∫ÂõæÁâá
 270   1        if (!offset_y)
 271   1        {
 272   2      
 273   2          cmd_w12864(0x40 | x);
 274   2          cmd_w12864(0xb8 | screen_y);
 275   2      
 276   2          switch (crossingScreen)
 277   2          {
 278   3          case 0:
 279   3            for (i = 0; i < 16; i++)
 280   3              dat_w12864(addr[i]);
 281   3            break;
 282   3          case 1:
 283   3            break;
 284   3          case 2:
 285   3            for (i = 0; i < 63 - x; i++)
 286   3              dat_w12864(addr[i]);
 287   3            break;
 288   3          default:
 289   3            break;
 290   3          }
 291   2      
 292   2          // ‰∏ãÂçäÈÉ®ÂàÜ
 293   2          cmd_w12864(0x40 | x);
 294   2          cmd_w12864(0xb8 | (screen_y + 1));
 295   2      
 296   2          switch (crossingScreen)
 297   2          {
C51 COMPILER V9.60.7.0   LCD12864                                                          06/13/2023 13:03:32 PAGE 6   

 298   3          case 0:
 299   3            for (i = 0; i < 16; i++)
 300   3              dat_w12864(addr[i + 16]);
 301   3            break;
 302   3          case 1:
 303   3            break;
 304   3          case 2:
 305   3            for (i = 0; i < 63 - x; i++)
 306   3              dat_w12864(addr[i + 16]);
 307   3            break;
 308   3          default:
 309   3            break;
 310   3          }
 311   2        }
 312   1        // Âê¶ÂàôÔºå‰∏ÄÂº†ÂõæÁâáË¶ÅÊãÜÂàÜÊàê3ÊÆµ
 313   1        else
 314   1        {
 315   2          // ÂÖàÂèñ‰∏äÈù¢Á¨¨1ÊÆµ
 316   2          uint8 seg1[16] = {0x00};
 317   2          uint8 seg2[16] = {0x00};
 318   2          uint8 seg3[16] = {0x00};
 319   2      
 320   2          // ÊûÑÈÄ†Ëøô3ÊÆµÊñ∞Êï∞ÊçÆ
 321   2          for (i = 0; i < 16; i++)
 322   2          {
 323   3            seg1[i] = seg1[i] | (addr[i] << (8 - offset_y));
 324   3            seg2[i] = (addr[i] >> offset_y) | (addr[i + 16] << (8 - offset_y));
 325   3            seg3[i] = addr[i + 16] >> offset_y;
 326   3          }
 327   2      
 328   2          // ÂÖàÁîªÁ¨¨‰∏ÄÊÆµ
 329   2          cmd_w12864(0x40 | x);
 330   2          cmd_w12864(0xb8 | (screen_y));
 331   2          for (i = 0; i < 16; i++)
 332   2            dat_w12864(seg1[i]);
 333   2      
 334   2          // ÂÜçÁîªÁ¨¨‰∫åÊÆµ
 335   2          cmd_w12864(0x40 | x);
 336   2          cmd_w12864(0xb8 | (screen_y + 1));
 337   2          for (i = 0; i < 16; i++)
 338   2            dat_w12864(seg2[i]);
 339   2      
 340   2          // ÂÜçÁîªÁ¨¨‰∏âÊÆµ
 341   2          cmd_w12864(0x40 | x);
 342   2          cmd_w12864(0xb8 | (screen_y + 2));
 343   2          for (i = 0; i < 16; i++)
 344   2            dat_w12864(seg3[i]);
 345   2        }
 346   1      }
*** WARNING C280 IN LINE 232 OF lcd12864.c: 'dir_vertical': unreferenced local variable
 347          
 348          void clearObject(uint8 x, uint8 y)
 349          {
 350   1        uint8 i;
 351   1      
 352   1        if (x > 63)
 353   1        {
 354   2          choose12864(1);
 355   2          x = x - 64;
 356   2        }
 357   1        else
 358   1          choose12864(0);
C51 COMPILER V9.60.7.0   LCD12864                                                          06/13/2023 13:03:32 PAGE 7   

 359   1      
 360   1        cmd_w12864(0x40 | x);
 361   1        cmd_w12864(0xb8 | (y++));
 362   1      
 363   1        for (i = 0; i < 16; i++)
 364   1          dat_w12864(0x00);
 365   1      
 366   1        cmd_w12864(0x40 | x);
 367   1        cmd_w12864(0xb8 | y);
 368   1      
 369   1        for (i = 0; i < 16; i++)
 370   1          dat_w12864(0x00);
 371   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1300    ----
   CONSTANT SIZE    =     48    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      69
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
