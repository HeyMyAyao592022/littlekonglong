C51 COMPILER V9.60.7.0   LCD12864                                                          06/16/2023 15:46:52 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD12864
OBJECT MODULE PLACED IN .\Objects\lcd12864.obj
COMPILER INVOKED BY: D:\2023stuffs\Keil\C51\BIN\C51.EXE lcd12864.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\lcd12864.lst) TABS(2) OBJECT(.\Objects\lcd12864.obj)

line level    source

   1          #include "lcd12864.h"
   2          
   3          /**
   4           * @brief ËæÖÂä©ÊòæÁ§∫ÊùøÂùó
   5           *
   6           */
   7          void auxDrawBlock(uint8 x, uint8 screen_y, uint8 offset_y);
   8          
   9          /**
  10           * @brief ËæÖÂä©ÊòæÁ§∫ÊÅêÈæô
  11           *
  12           * @param konglong
  13           */
  14          // void auxDrawKonglong(KongLong *konglong, uint8 x, uint8 screen_y, uint8 offset_y);
  15          
  16          /**
  17           * @brief ËæÖÂä©ÊòæÁ§∫Ë∑®Ë∂äÂ∑¶Âè≥Â±èÂπïÁöÑÊÅêÈæô
  18           *
  19           */
  20          void auxDrawKonglongX(KongLong *KongLong, uint8 screen_y, uint8 offset_y);
  21          
  22          /**
  23           * @brief Ê∏ÖÈô§Â∞èÊÅêÈæô‰∏ãÈôçÁöÑÊÆãÂΩ±
  24           *
  25           * @param x
  26           * @param screen_y
  27           */
  28          void clearGhost(uint8 x, uint8 screen_y);
  29          
  30          /**
  31           * @brief Â∞èÊùøÂùóÁöÑ‰∫åËøõÂà∂
  32           *
  33           */
  34          #define blockDot 0x09
  35          
  36          /// @brief ËæÖÂä©ÊòæÁ§∫ÂõæÁâá
  37          data uint8 segment[16];
  38          
  39          /// @brief
  40          data int8 screen_y;
  41          data int8 offset_y;
  42          
  43          void chekbusy12864(void)
  44          {
  45   1        data uint8 dat;
  46   1      
  47   1        RS = 0;
  48   1        RW = 1;
  49   1        do
  50   1        {
  51   2          P2 = 0;
  52   2          E = 1;
  53   2          _nop_();
  54   2          dat = P2 & 0x80;
C51 COMPILER V9.60.7.0   LCD12864                                                          06/16/2023 15:46:52 PAGE 2   

  55   2          E = 0;
  56   2        } while (dat != 0);
  57   1      }
  58          
  59          void choose12864(uint8 i)
  60          {
  61   1        switch (i)
  62   1        {
  63   2        case 0:
  64   2          CS1 = 0;
  65   2          CS2 = 1;
  66   2          break;
  67   2        case 1:
  68   2          CS1 = 1;
  69   2          CS2 = 0;
  70   2          break;
  71   2      
  72   2        default:
  73   2          break;
  74   2        }
  75   1      }
  76          
  77          void cmd_w12864(uint8 cmd)
  78          {
  79   1        chekbusy12864();
  80   1      
  81   1        RS = 0;
  82   1        RW = 0;
  83   1        _nop_();
  84   1        E = 1;
  85   1        _nop_();
  86   1        P2 = cmd;
  87   1        _nop_();
  88   1        E = 0;
  89   1      }
  90          
  91          void dat_w12864(uint8 dat)
  92          {
  93   1        chekbusy12864();
  94   1      
  95   1        RS = 1;
  96   1        RW = 0;
  97   1        _nop_();
  98   1        E = 1;
  99   1        _nop_();
 100   1        P2 = dat;
 101   1        _nop_();
 102   1        E = 0;
 103   1      }
 104          
 105          /**
 106           * @brief ËØªÂèñÂ±èÂπïÊï∞ÊçÆ
 107           *
 108           * @return uint8
 109           */
 110          uint8 dat_r12864(void)
 111          {
 112   1        data uint8 lcdData;
 113   1        chekbusy12864();
 114   1        P2 = 0xff;
 115   1        E = 0;
 116   1        RS = 1;
C51 COMPILER V9.60.7.0   LCD12864                                                          06/16/2023 15:46:52 PAGE 3   

 117   1        RW = 1;
 118   1        E = 1;
 119   1        _nop_();
 120   1        _nop_();
 121   1        _nop_();
 122   1        lcdData = P2;
 123   1        _nop_();
 124   1        _nop_();
 125   1        _nop_();
 126   1        E = 0;
 127   1        return lcdData;
 128   1      }
 129          
 130          void clear12864(void)
 131          {
 132   1        data uint8 page, row;
 133   1      
 134   1        // ÈÄâÊã©Â∑¶Â±è
 135   1        choose12864(0);
 136   1        // ÈÅçÂéÜ 8 È°µ
 137   1        for (page = 0; page < 8; page++)
 138   1        {
 139   2          cmd_w12864(0xb8 + page);
 140   2          cmd_w12864(0x40);
 141   2          for (row = 0; row < 64; row++)
 142   2          {
 143   3      
 144   3            dat_w12864(0x00);
 145   3          }
 146   2        }
 147   1      
 148   1        choose12864(1);
 149   1        for (page = 0; page < 8; page++)
 150   1        {
 151   2          cmd_w12864(0xb8 + page);
 152   2          cmd_w12864(0x40);
 153   2          for (row = 0; row < 64; row++)
 154   2          {
 155   3            dat_w12864(0x00);
 156   3          }
 157   2        }
 158   1      }
 159          
 160          void LCD_init(void)
 161          {
 162   1        chekbusy12864();
 163   1        cmd_w12864(0xc0);
 164   1        cmd_w12864(0x3f);
 165   1        clear12864();
 166   1      }
 167          
 168          void drawBlock(uint8 x, uint8 y, bit standing)
 169          {
 170   1        data uint8 i;
 171   1        //  data uint8 blockDot = 0x0f;
 172   1        screen_y = y / 8; // ÁÆóÂá∫ y ÂØπÂ∫îÂ±èÂπïÁöÑ y ÂùêÊ†á
 173   1        offset_y = y % 8; // ÁÆóÂá∫ y ÂØπ screen_y ÁöÑÂÅèÁßª
 174   1      
 175   1        // ÈÄâÊã©Â±èÂπï
 176   1        if (x > 63)
 177   1        {
 178   2          choose12864(1);
C51 COMPILER V9.60.7.0   LCD12864                                                          06/16/2023 15:46:52 PAGE 4   

 179   2          x = x - 64;
 180   2        }
 181   1        else
 182   1          choose12864(0);
 183   1      
 184   1        // offset ‰∏∫ 0 Â∞±Ê≠£Â∏∏ÊòæÁ§∫ÂõæÁâá
 185   1        if (!offset_y)
 186   1        {
 187   2          cmd_w12864(0x40 | x);
 188   2          cmd_w12864(0xb8 | screen_y);
 189   2      
 190   2          dat_w12864(0x0f);
 191   2          for (i = 1; i < 15; i++)
 192   2            dat_w12864(blockDot);
 193   2          dat_w12864(0x0f);
 194   2        }
 195   1        // Âê¶ÂàôÔºå‰∏ÄÂº†ÂõæÁâáË¶ÅÊãÜÂàÜÊàê2ÊÆµ
 196   1        else
 197   1        {
 198   2          // ÂÖàÁîªÁ¨¨‰∏ÄÊÆµ
 199   2          cmd_w12864(0x40 | x);
 200   2          cmd_w12864(0xb8 | (screen_y));
 201   2      
 202   2          // Â¶ÇÊûúÊùøÂùó‰∏äÈù¢Á´ôÂú®Â∞èÊÅêÈæôÔºåÂàô‰ΩøÁî®Â§çÊùÇÁªòÂõæÊ≥ï
 203   2          if (standing)
 204   2          {
 205   3            auxDrawBlock(x, screen_y, offset_y);
 206   3          }
 207   2          else
 208   2          {
 209   3            segment[0] = (0x0f << offset_y) | 0x00;
 210   3            dat_w12864(segment[0]);
 211   3            for (i = 1; i < 15; i++)
 212   3            {
 213   4              segment[0] = (blockDot << offset_y) | 0x00;
 214   4              dat_w12864(segment[0]);
 215   4            }
 216   3            segment[0] = (0x0f << offset_y) | 0x00;
 217   3            dat_w12864(segment[0]);
 218   3          }
 219   2      
 220   2          // ÂÜçÁîªÁ¨¨‰∫åÊÆµ
 221   2          cmd_w12864(0x40 | x);
 222   2          cmd_w12864(0xb8 | (screen_y + 1));
 223   2      
 224   2          segment[0] = (0x0f >> (8 - offset_y));
 225   2          dat_w12864(segment[0]);
 226   2          for (i = 1; i < 15; i++)
 227   2          {
 228   3            segment[0] = (blockDot >> (8 - offset_y));
 229   3            dat_w12864(segment[0]);
 230   3          }
 231   2          segment[0] = (0x0f >> (8 - offset_y));
 232   2          dat_w12864(segment[0]);
 233   2      
 234   2          for (i = 0; i < 16; i++)
 235   2            segment[0] = 0x00;
 236   2        }
 237   1      }
 238          
 239          /**
 240           * @brief
C51 COMPILER V9.60.7.0   LCD12864                                                          06/16/2023 15:46:52 PAGE 5   

 241           * ÂõæÂÉèÁöÑ y ÂùêÊ†áÂπ∂‰∏çÊòØÂ±èÂπïÁöÑÂÆûÈôÖ y ÂùêÊ†áÔºåÂ±èÂπïÁ∫µÊñπÂêëË¢´ÂàÜ‰∏∫‰∫Ü 8 ÊÆµÔºåÊØèÊÆµÊúâ 8 Ë
             -°åÔºåÂÖ± 64 ‰∏™ÂÉèÁ¥†„ÄÇ
 242           * Êàë‰ª¨ÊØèÊ¨°ÂêëÂ±èÂπïÂÜôÂÖ•‰∏Ä‰∏™ 8‰Ωç16ËøõÂà∂Êï∞ÊçÆÔºåÈÇ£Ëøô‰∏™Êï∞ÊçÆÂ∞±‰ºöÂú®Â±èÂπï‰∏äÂΩ¢Êàê Á∫µÊñπÂê
             -ëÁöÑ8‰∏™Â∞èÁÇπ„ÄÇÔºàÂàöÂ•ΩÊòØ 16x16 ÂõæÂÉèÈ´òÂ∫¶ÁöÑ‰∏ÄÂçäÔºâ
 243           * ‰∏ÄËà¨Êàë‰ª¨Ë¶ÅÂú® Ôºàscreen_x,screen_y) ÁöÑÂú∞ÊñπÂÜôÂÖ• 16x16 ÁöÑÂõæÁâáÔºå
 244           * ÈÉΩÊòØÂÖàÂú® (screen_x,screen_y)ÂÜô‰∏äÂçäÈÉ®ÂàÜÔºåÂÜôÂÖ• 8 ‰∏™8‰Ωç16ËøõÂà∂Êï∞ÊçÆÔºåÊûÑÊàêÂõæÂÉèÁöÑ‰∏äÂç
             -äÈÉ®ÂàÜÔºå
 245           * ÁÑ∂ÂêéÂÜçÂú® (screen_x,screen_y + 1)ÂÜôÂÖ•‰∏ãÂçäÈÉ®ÂàÜ„ÄÇ
 246           * ÂÅáÂ¶ÇÂõæÂÉèÁöÑ y ÂùêÊ†áÂàöÂ•ΩÊòØ 8 ÁöÑÂÄçÊï∞ÔºåÊØîÂ¶Ç 16ÔºåÈÇ£ 16x16 ÁöÑÂõæÂÉèÂàöÂ•ΩÂèØ‰ª•Ë¢´ÊîæÂú®Â±è
             -Âπï y ÂùêÊ†á‰∏∫ 2 ÁöÑ‰ΩçÁΩÆ„ÄÇ
 247           * Â¶ÇÊûúÂõæÂÉèÁöÑ y ÂùêÊ†á‰∏çÊòØ 8 ÁöÑÂÄçÊï∞ÔºåÊØîÂ¶Ç 18ÔºåÈÇ£Êàë‰ª¨Â∞±ÈúÄË¶ÅÊääÂõæÂÉèÂàÜÊàê 3 ÊÆµÔºåÂπ∂È
             -ÄöËøáË¥üË¥£ÁöÑËøêÁÆóÊääÂõæÂÉèÊîæÂà∞Â±èÂπï‰∏ä„ÄÇ
 248           *
 249           */
 250          void drawKonglong(KongLong *konglong)
 251          {
 252   1        data uint8 i;
 253   1        data int8 x = konglong->x;
 254   1        screen_y = konglong->y / 8; // ÁÆóÂá∫ y ÂØπÂ∫îÂ±èÂπïÁöÑ y ÂùêÊ†á
 255   1        offset_y = konglong->y % 8; // ÁÆóÂá∫ y ÂØπ screen_y ÁöÑÂÅèÁßª
 256   1      
 257   1        // Âà§Êñ≠ÊòØÂê¶Âú®Ë∑®Ë∂äÂ∑¶Âè≥Â±èÂπï
 258   1        if (konglong->x > 47 && konglong->x < 64)
 259   1        {
 260   2          auxDrawKonglongX(konglong, screen_y, offset_y);
 261   2          return;
 262   2        }
 263   1      
 264   1        // ÈÄâÊã©Â±èÂπï
 265   1        if (x > 63)
 266   1        {
 267   2          choose12864(1);
 268   2          x = x - 64;
 269   2        }
 270   1        else
 271   1          choose12864(0);
 272   1      
 273   1        // Ê∏ÖÈô§ÊÆãÂΩ±
 274   1        if (!((konglong->y - 1) % 8))
 275   1          clearGhost(konglong->x, screen_y - 1);
 276   1      
 277   1        // offset ‰∏∫ 0 Â∞±Ê≠£Â∏∏ÊòæÁ§∫ÂõæÁâá
 278   1        if (!offset_y)
 279   1        {
 280   2          // ÂêëÂè≥ÁßªÂä®ÂíåÂêëÂ∑¶ÁßªÂä®‰∏çÂêå
 281   2          if (konglong->towards == DIR_RIGHT)
 282   2          {
 283   3            // ‰∏äÂçäÈÉ®ÂàÜ
 284   3            cmd_w12864(0x40 | x);
 285   3            cmd_w12864(0xb8 | screen_y);
 286   3            for (i = 0; i < 16; i++)
 287   3              dat_w12864(konglong->image[i]);
 288   3      
 289   3            // ‰∏ãÂçäÈÉ®ÂàÜ
 290   3            cmd_w12864(0x40 | x);
 291   3            cmd_w12864(0xb8 | (screen_y + 1));
 292   3            for (i = 0; i < 16; i++)
 293   3              dat_w12864(konglong->image[i + 16]);
 294   3          }
 295   2          else
 296   2          {
 297   3            cmd_w12864(0x40 | x);
C51 COMPILER V9.60.7.0   LCD12864                                                          06/16/2023 15:46:52 PAGE 6   

 298   3            cmd_w12864(0xb8 | screen_y);
 299   3            for (i = 0; i < 16; i++)
 300   3              dat_w12864(konglong->image[15 - i]);
 301   3      
 302   3            // ‰∏ãÂçäÈÉ®ÂàÜ
 303   3            // Â§ÑÁêÜË∑®Â±è
 304   3            cmd_w12864(0x40 | x);
 305   3            cmd_w12864(0xb8 | (screen_y + 1));
 306   3            // ÂêëÂè≥ÁßªÂä®ÂíåÂêëÂ∑¶ÁßªÂä®‰∏çÂêå
 307   3            for (i = 0; i < 16; i++)
 308   3              dat_w12864(konglong->image[31 - i]);
 309   3          }
 310   2        }
 311   1        // Âê¶ÂàôÔºå‰∏ÄÂº†ÂõæÁâáË¶ÅÊãÜÂàÜÊàê3ÊÆµ
 312   1        else
 313   1        {
 314   2          if (konglong->towards == DIR_RIGHT)
 315   2          {
 316   3            // ÂÖàÁîªÁ¨¨‰∏ÄÊÆµ
 317   3            cmd_w12864(0x40 | x);
 318   3            cmd_w12864(0xb8 | screen_y);
 319   3      
 320   3            for (i = 0; i < 16; i++)
 321   3            {
 322   4              segment[0] = 0x00 | (konglong->image[i] << offset_y);
 323   4              dat_w12864(segment[0]);
 324   4            }
 325   3      
 326   3            // Á¨¨‰∫åÊÆµ
 327   3            cmd_w12864(0x40 | x);
 328   3            cmd_w12864(0xb8 | (screen_y + 1));
 329   3      
 330   3            for (i = 0; i < 16; i++)
 331   3            {
 332   4              segment[0] = (konglong->image[i] >> (8 - offset_y)) | (konglong->image[i + 16] << offset_y);
 333   4              dat_w12864(segment[0]);
 334   4            }
 335   3      
 336   3            // Á¨¨‰∏âÊÆµ
 337   3            cmd_w12864(0x40 | x);
 338   3            cmd_w12864(0xb8 | (screen_y + 2));
 339   3      
 340   3            for (i = 0; i < 16; i++)
 341   3            {
 342   4              segment[0] = konglong->image[i + 16] >> (8 - offset_y);
 343   4              dat_w12864(segment[0]);
 344   4            }
 345   3          }
 346   2          else
 347   2          {
 348   3            // ÂÖàÁîªÁ¨¨‰∏ÄÊÆµ
 349   3            cmd_w12864(0x40 | x);
 350   3            cmd_w12864(0xb8 | screen_y);
 351   3            for (i = 0; i < 16; i++)
 352   3            {
 353   4              segment[0] = 0x00 | (konglong->image[15 - i] << offset_y);
 354   4              dat_w12864(segment[0]);
 355   4            }
 356   3      
 357   3            // Á¨¨‰∫åÊÆµ
 358   3            cmd_w12864(0x40 | x);
 359   3            cmd_w12864(0xb8 | (screen_y + 1));
C51 COMPILER V9.60.7.0   LCD12864                                                          06/16/2023 15:46:52 PAGE 7   

 360   3            for (i = 0; i < 16; i++)
 361   3            {
 362   4              segment[0] = (konglong->image[15 - i] >> (8 - offset_y)) |
 363   4                     (konglong->image[31 - i] << offset_y);
 364   4              dat_w12864(segment[0]);
 365   4            }
 366   3      
 367   3            // Á¨¨‰∏âÊÆµ
 368   3            cmd_w12864(0x40 | x);
 369   3            cmd_w12864(0xb8 | (screen_y + 2));
 370   3            for (i = 0; i < 16; i++)
 371   3            {
 372   4              segment[0] = konglong->image[31 - i] >> (8 - offset_y);
 373   4              dat_w12864(segment[0]);
 374   4            }
 375   3          }
 376   2      
 377   2          // Ê∏ÖÈô§ segment
 378   2          segment[0] = 0x00;
 379   2          if (konglong->standingBlock != -1)
 380   2          {
 381   3            for (i = 1; i < 16; i++)
 382   3            {
 383   4              segment[i] = 0x00;
 384   4            }
 385   3          }
 386   2        }
 387   1      }
 388          
 389          void clearObject(uint8 x, uint8 y)
 390          {
 391   1        data uint8 i;
 392   1        screen_y = y / 8;   // ÁÆóÂá∫ y ÂØπÂ∫îÂ±èÂπïÁöÑ y ÂùêÊ†á
 393   1        offset_y = 8 - (y % 8); // ÁÆóÂá∫ y ÂØπ screen_y ÁöÑÂÅèÁßª
 394   1      
 395   1        if (x > 63)
 396   1        {
 397   2          choose12864(1);
 398   2          x = x - 64;
 399   2        }
 400   1        else
 401   1          choose12864(0);
 402   1      
 403   1        // offset ‰∏∫ 0 Â∞±Ê≠£Â∏∏Ê∏ÖÈô§ÂõæÁâá
 404   1        if (!offset_y)
 405   1        {
 406   2          cmd_w12864(0x40 | x);
 407   2          cmd_w12864(0xb8 | screen_y);
 408   2          for (i = 0; i < 16; i++)
 409   2            dat_w12864(0x00);
 410   2      
 411   2          // ‰∏ãÂçäÈÉ®ÂàÜ
 412   2          cmd_w12864(0x40 | x);
 413   2          cmd_w12864(0xb8 | (screen_y + 1));
 414   2          for (i = 0; i < 16; i++)
 415   2            dat_w12864(0x00);
 416   2        }
 417   1        else
 418   1        {
 419   2          cmd_w12864(0x40 | x);
 420   2          cmd_w12864(0xb8 | (screen_y));
 421   2          for (i = 0; i < 16; i++)
C51 COMPILER V9.60.7.0   LCD12864                                                          06/16/2023 15:46:52 PAGE 8   

 422   2            dat_w12864(0x00);
 423   2      
 424   2          cmd_w12864(0x40 | x);
 425   2          cmd_w12864(0xb8 | (screen_y + 1));
 426   2          for (i = 0; i < 16; i++)
 427   2            dat_w12864(0x00);
 428   2      
 429   2          cmd_w12864(0x40 | x);
 430   2          cmd_w12864(0xb8 | (screen_y + 2));
 431   2          for (i = 0; i < 16; i++)
 432   2            dat_w12864(0x00);
 433   2        }
 434   1      }
 435          
 436          // void drawWall()
 437          // {
 438          //  uint8 i;
 439          //  choose12864(0);
 440          //  for (i = 0; i < 8; i++)
 441          //  {
 442          //    cmd_w12864(0x40 | 63);
 443          //    cmd_w12864(0xb8 | i);
 444          //    dat_w12864(0xff);
 445          //  }
 446          // }
 447          
 448          void drawRoof()
 449          {
 450   1        data uint8 i;
 451   1        choose12864(0);
 452   1        for (i = 0; i < 64; i++)
 453   1        {
 454   2          cmd_w12864(0x40 | i);
 455   2          cmd_w12864(0xb8);
 456   2          dat_w12864(0x01);
 457   2        }
 458   1        for (i = 0; i < 8; i++)
 459   1        {
 460   2          cmd_w12864(0x40);
 461   2          cmd_w12864(0xb8 | i);
 462   2          dat_w12864(0xff);
 463   2        }
 464   1        // Âè≥
 465   1        choose12864(1);
 466   1        for (i = 0; i < 64; i++)
 467   1        {
 468   2          cmd_w12864(0x40 | i);
 469   2          cmd_w12864(0xb8);
 470   2          dat_w12864(0x01);
 471   2        }
 472   1        for (i = 0; i < 8; i++)
 473   1        {
 474   2          cmd_w12864(0x40 | 63);
 475   2          cmd_w12864(0xb8 | i);
 476   2          dat_w12864(0xff);
 477   2        }
 478   1      }
 479          
 480          /**
 481           * @brief Áî®Â§çÊùÇÁªòÂõæÊ≥ïÁîªÁ¨¨‰∏ÄÊÆµ
 482           *
 483           * @param x
C51 COMPILER V9.60.7.0   LCD12864                                                          06/16/2023 15:46:52 PAGE 9   

 484           * @param screen_y
 485           * @param offset_y
 486           */
 487          void auxDrawBlock(uint8 x, uint8 screen_y, uint8 offset_y)
 488          {
 489   1        uint8 i;
 490   1      
 491   1        // Êåá‰ª§Â∑≤ÁªèÂú®Ë∞ÉÁî®ËØ•ÂáΩÊï∞ÂâçÂÜôÂÖ•‰∫Ü
 492   1        // ÁîªÁ¨¨‰∏ÄÊÆµ
 493   1        // Â¶ÇÊûúÂ∞èÊÅêÈæôÁ´ôÂú®Â∞èÊùøÂ≠ê‰∏äÈù¢ÔºåÊàñËÄÖÂ∞èÊùøÂ≠êËææÂà∞‰∫ÜÈ°∂Â±ÇÔºåÈÇ£Â∞±Áî®Â§çÊùÇÁªòÂà∂Ê≥ï
 494   1        dat_r12864();
 495   1        segment[0] = (0x0f << offset_y) | dat_r12864();
 496   1        for (i = 1; i < 15; i++)
 497   1        {
 498   2          dat_r12864();
 499   2          segment[i] = (blockDot << offset_y) |
 500   2                 dat_r12864() & (0xff >> (8 - offset_y));
 501   2        }
 502   1        dat_r12864();
 503   1        segment[15] = (0x0f << offset_y) | dat_r12864();
 504   1      
 505   1        cmd_w12864(0x40 | x);
 506   1        cmd_w12864(0xb8 | (screen_y));
 507   1        for (i = 0; i < 16; i++)
 508   1        {
 509   2          dat_w12864(segment[i]);
 510   2        }
 511   1      }
 512          
 513          /**
 514           * @brief Áî®Â§çÊùÇÁªòÂõæÊ≥ïÁîªÁ¨¨‰∏âÊÆµ
 515           *
 516           * @param konglong
 517           * @param x
 518           * @param screen_y
 519           * @param offset_y
 520           */
 521          // void auxDrawKonglong(KongLong *konglong, uint8 x, uint8 screen_y, uint8 offset_y)
 522          // {
 523          //  uint8 i;
 524          
 525          //  // Êåá‰ª§Â∑≤ÁªèÂú®Ë∞ÉÁî®ËØ•ÂáΩÊï∞ÂâçÂÜôÂÖ•‰∫Ü
 526          //  for (i = 0; i < 16; i++)
 527          //  {
 528          //    dat_r12864();
 529          //    segment[i] = konglong->image[i + 16] >> (8 - offset_y) | dat_r12864();
 530          //  }
 531          
 532          //  cmd_w12864(0x40 | x);
 533          //  cmd_w12864(0xb8 | (screen_y + 2));
 534          
 535          //  if (konglong->towards == DIR_RIGHT)
 536          //  {
 537          //    for (i = 0; i < 16; i++)
 538          //    {
 539          //      dat_w12864(segment[i]);
 540          //    }
 541          //  }
 542          //  else
 543          //  {
 544          //    for (i = 0; i < 16; i++)
 545          //    {
C51 COMPILER V9.60.7.0   LCD12864                                                          06/16/2023 15:46:52 PAGE 10  

 546          //      dat_w12864(segment[15 - i]);
 547          //    }
 548          //  }
 549          // }
 550          
 551          /**
 552           * @brief Ê®™Ë∑®Â∑¶Âè≥Â±èÂπïÁöÑÁîªÊ≥ï
 553           *
 554           * @param konglong
 555           * @param screen_y
 556           * @param offset_y
 557           */
 558          void auxDrawKonglongX(KongLong *konglong, uint8 screen_y, uint8 offset_y)
 559          {
 560   1        uint8 i;
 561   1        uint8 offset_x = 63 - konglong->x;
 562   1        // offset ‰∏∫ 0 Â∞±Ê≠£Â∏∏ÊòæÁ§∫ÂõæÁâá
 563   1        if (!offset_y)
 564   1        {
 565   2          /// @note ÂÖàÁîªÂ∑¶Ëæπ
 566   2          // ÂêëÂè≥ÁßªÂä®ÂíåÂêëÂ∑¶ÁßªÂä®‰∏çÂêå
 567   2          if (konglong->towards == DIR_RIGHT)
 568   2          {
 569   3            // ‰∏äÂçäÈÉ®ÂàÜ
 570   3            cmd_w12864(0x40 | konglong->x);
 571   3            cmd_w12864(0xb8 | screen_y);
 572   3            for (i = 0; i < offset_x; i++)
 573   3              dat_w12864(konglong->image[i]);
 574   3      
 575   3            // ‰∏ãÂçäÈÉ®ÂàÜ
 576   3            cmd_w12864(0x40 | konglong->x);
 577   3            cmd_w12864(0xb8 | (screen_y + 1));
 578   3            for (i = 0; i < offset_x; i++)
 579   3              dat_w12864(konglong->image[i + 16]);
 580   3          }
 581   2          else
 582   2          {
 583   3            cmd_w12864(0x40 | konglong->x);
 584   3            cmd_w12864(0xb8 | screen_y);
 585   3            for (i = 0; i < offset_x; i++)
 586   3              dat_w12864(konglong->image[15 - i]);
 587   3      
 588   3            // ‰∏ãÂçäÈÉ®ÂàÜ
 589   3            // Â§ÑÁêÜË∑®Â±è
 590   3            cmd_w12864(0x40 | konglong->x);
 591   3            cmd_w12864(0xb8 | (screen_y + 1));
 592   3            // ÂêëÂè≥ÁßªÂä®ÂíåÂêëÂ∑¶ÁßªÂä®‰∏çÂêå
 593   3            for (i = 0; i < offset_x; i++)
 594   3              dat_w12864(konglong->image[31 - i]);
 595   3          }
 596   2      
 597   2          /// @note ÂÜçÁîªÂè≥Ëæπ
 598   2          choose12864(1);
 599   2      
 600   2          // ÂêëÂè≥ÁßªÂä®ÂíåÂêëÂ∑¶ÁßªÂä®‰∏çÂêå
 601   2          if (konglong->towards == DIR_RIGHT)
 602   2          {
 603   3            // ‰∏äÂçäÈÉ®ÂàÜ
 604   3            cmd_w12864(0x40);
 605   3            cmd_w12864(0xb8 | screen_y);
 606   3            for (i = offset_x; i < 16; i++)
 607   3              dat_w12864(konglong->image[i]);
C51 COMPILER V9.60.7.0   LCD12864                                                          06/16/2023 15:46:52 PAGE 11  

 608   3      
 609   3            // ‰∏ãÂçäÈÉ®ÂàÜ
 610   3            cmd_w12864(0x40);
 611   3            cmd_w12864(0xb8 | (screen_y + 1));
 612   3            for (i = offset_x; i < 16; i++)
 613   3              dat_w12864(konglong->image[i + 16]);
 614   3          }
 615   2          else
 616   2          {
 617   3            cmd_w12864(0x40);
 618   3            cmd_w12864(0xb8 | screen_y);
 619   3            for (i = offset_x; i < 16; i++)
 620   3              dat_w12864(konglong->image[15 - i]);
 621   3      
 622   3            // ‰∏ãÂçäÈÉ®ÂàÜ
 623   3            // Â§ÑÁêÜË∑®Â±è
 624   3            cmd_w12864(0x40);
 625   3            cmd_w12864(0xb8 | (screen_y + 1));
 626   3            // ÂêëÂè≥ÁßªÂä®ÂíåÂêëÂ∑¶ÁßªÂä®‰∏çÂêå
 627   3            for (i = offset_x; i < 16; i++)
 628   3              dat_w12864(konglong->image[31 - i]);
 629   3          }
 630   2        }
 631   1        // Âê¶ÂàôÔºå‰∏ÄÂº†ÂõæÁâáË¶ÅÊãÜÂàÜÊàê3ÊÆµ
 632   1        else
 633   1        {
 634   2          /// @note ÂÖàÁîªÂ∑¶Ëæπ
 635   2          choose12864(0);
 636   2      
 637   2          if (konglong->towards == DIR_RIGHT)
 638   2          {
 639   3            // ÂÖàÁîªÁ¨¨‰∏ÄÊÆµ
 640   3            cmd_w12864(0x40 | konglong->x);
 641   3            cmd_w12864(0xb8 | screen_y);
 642   3      
 643   3            for (i = 0; i < offset_x; i++)
 644   3            {
 645   4              segment[0] = 0x00 | (konglong->image[i] << offset_y);
 646   4              dat_w12864(segment[0]);
 647   4            }
 648   3      
 649   3            // Á¨¨‰∫åÊÆµ
 650   3            cmd_w12864(0x40 | konglong->x);
 651   3            cmd_w12864(0xb8 | (screen_y + 1));
 652   3      
 653   3            for (i = 0; i < offset_x; i++)
 654   3            {
 655   4              segment[0] = (konglong->image[i] >> (8 - offset_y)) | (konglong->image[i + 16] << offset_y);
 656   4              dat_w12864(segment[0]);
 657   4            }
 658   3      
 659   3            // Á¨¨‰∏âÊÆµ
 660   3            cmd_w12864(0x40 | konglong->x);
 661   3            cmd_w12864(0xb8 | (screen_y + 2));
 662   3      
 663   3            for (i = 0; i < offset_x; i++)
 664   3            {
 665   4              segment[0] = konglong->image[i + 16] >> (8 - offset_y);
 666   4              dat_w12864(segment[0]);
 667   4            }
 668   3          }
 669   2          else
C51 COMPILER V9.60.7.0   LCD12864                                                          06/16/2023 15:46:52 PAGE 12  

 670   2          {
 671   3            // ÂÖàÁîªÁ¨¨‰∏ÄÊÆµ
 672   3            cmd_w12864(0x40 | konglong->x);
 673   3            cmd_w12864(0xb8 | screen_y);
 674   3            for (i = 0; i < offset_x; i++)
 675   3            {
 676   4              segment[0] = 0x00 | (konglong->image[15 - i] << offset_y);
 677   4              dat_w12864(segment[0]);
 678   4            }
 679   3      
 680   3            // Á¨¨‰∫åÊÆµ
 681   3            cmd_w12864(0x40 | konglong->x);
 682   3            cmd_w12864(0xb8 | (screen_y + 1));
 683   3            for (i = 0; i < offset_x; i++)
 684   3            {
 685   4              segment[0] = (konglong->image[15 - i] >> (8 - offset_y)) |
 686   4                     (konglong->image[31 - i] << offset_y);
 687   4              dat_w12864(segment[0]);
 688   4            }
 689   3      
 690   3            // Á¨¨‰∏âÊÆµ
 691   3            cmd_w12864(0x40 | konglong->x);
 692   3            cmd_w12864(0xb8 | (screen_y + 2));
 693   3            for (i = 0; i < offset_x; i++)
 694   3            {
 695   4              segment[0] = konglong->image[31 - i] >> (8 - offset_y);
 696   4              dat_w12864(segment[0]);
 697   4            }
 698   3          }
 699   2      
 700   2          /// @brief ÂÜçÁîªÂè≥Ëæπ
 701   2          choose12864(1);
 702   2      
 703   2          if (konglong->towards == DIR_RIGHT)
 704   2          {
 705   3            // ÂÖàÁîªÁ¨¨‰∏ÄÊÆµ
 706   3            cmd_w12864(0x40);
 707   3            cmd_w12864(0xb8 | screen_y);
 708   3      
 709   3            for (i = offset_x; i < 16; i++)
 710   3            {
 711   4              segment[0] = 0x00 | (konglong->image[i] << offset_y);
 712   4              dat_w12864(segment[0]);
 713   4            }
 714   3      
 715   3            // Á¨¨‰∫åÊÆµ
 716   3            cmd_w12864(0x40);
 717   3            cmd_w12864(0xb8 | (screen_y + 1));
 718   3      
 719   3            for (i = offset_x; i < 16; i++)
 720   3            {
 721   4              segment[0] = (konglong->image[i] >> (8 - offset_y)) | (konglong->image[i + 16] << offset_y);
 722   4              dat_w12864(segment[0]);
 723   4            }
 724   3      
 725   3            // Á¨¨‰∏âÊÆµ
 726   3            cmd_w12864(0x40);
 727   3            cmd_w12864(0xb8 | (screen_y + 2));
 728   3      
 729   3            for (i = offset_x; i < 16; i++)
 730   3            {
 731   4              segment[0] = konglong->image[i + 16] >> (8 - offset_y);
C51 COMPILER V9.60.7.0   LCD12864                                                          06/16/2023 15:46:52 PAGE 13  

 732   4              dat_w12864(segment[0]);
 733   4            }
 734   3          }
 735   2          else
 736   2          {
 737   3            // ÂÖàÁîªÁ¨¨‰∏ÄÊÆµ
 738   3            cmd_w12864(0x40);
 739   3            cmd_w12864(0xb8 | screen_y);
 740   3            for (i = offset_x; i < 16; i++)
 741   3            {
 742   4              segment[0] = 0x00 | (konglong->image[15 - i] << offset_y);
 743   4              dat_w12864(segment[0]);
 744   4            }
 745   3      
 746   3            // Á¨¨‰∫åÊÆµ
 747   3            cmd_w12864(0x40);
 748   3            cmd_w12864(0xb8 | (screen_y + 1));
 749   3            for (i = offset_x; i < 16; i++)
 750   3            {
 751   4              segment[0] = (konglong->image[15 - i] >> (8 - offset_y)) |
 752   4                     (konglong->image[31 - i] << offset_y);
 753   4              dat_w12864(segment[0]);
 754   4            }
 755   3      
 756   3            // Á¨¨‰∏âÊÆµ
 757   3            cmd_w12864(0x40);
 758   3            cmd_w12864(0xb8 | (screen_y + 2));
 759   3            for (i = offset_x; i < 16; i++)
 760   3            {
 761   4              segment[0] = konglong->image[31 - i] >> (8 - offset_y);
 762   4              dat_w12864(segment[0]);
 763   4            }
 764   3          }
 765   2      
 766   2          // Ê∏ÖÈô§ segment
 767   2          segment[0] = 0x00;
 768   2          if (konglong->standingBlock != -1)
 769   2          {
 770   3            for (i = 1; i < 16; i++)
 771   3            {
 772   4              segment[i] = 0x00;
 773   4            }
 774   3          }
 775   2        }
 776   1      }
 777          
 778          /**
 779           * @brief Ê∏ÖÈô§Â∞èÊÅêÈæô‰∏ãÈôçÊó∂‰∫ßÁîüÁöÑÊÆãÂΩ±
 780           *
 781           */
 782          void clearGhost(uint8 x, uint8 screen_y)
 783          {
 784   1        uint8 i;
 785   1        cmd_w12864(0x40 | x);
 786   1        cmd_w12864(0xb8 | (screen_y));
 787   1        for (i = 0; i < 16; i++)
 788   1        {
 789   2          dat_w12864(0x00);
 790   2        }
 791   1      }
 792          
 793          /**
C51 COMPILER V9.60.7.0   LCD12864                                                          06/16/2023 15:46:52 PAGE 14  

 794           * @brief Ê∏ÖÈô§‰∏ÄÊù°ÁóïËøπ
 795           *
 796           * @param x
 797           * @param y
 798           */
 799          void clearLine(uint8 x, uint8 y)
 800          {
 801   1        if (x > 63)
 802   1        {
 803   2          x -= 64;
 804   2          choose12864(1);
 805   2        }
 806   1        else
 807   1          choose12864(0);
 808   1      
 809   1        cmd_w12864(0x40 | x);
 810   1        cmd_w12864(0xb8 | y / 8);
 811   1        dat_w12864(0x00);
 812   1      }
 813          
 814          // void test()
 815          // {
 816          //  // uint8 i;
 817          
 818          //  cmd_w12864(0x34);
 819          //  cmd_w12864(0x36);
 820          
 821          //  choose12864(0);
 822          //  cmd_w12864(0x40 | 0);
 823          //  cmd_w12864(0xb8 | 0);
 824          
 825          //  for (i = 0; i < 8; i++)
 826          //  {
 827          //    dat_w12864(0x01);
 828          //  }
 829          
 830          //  cmd_w12864(0x30);
 831          // }
 832          
 833          // void test2()
 834          // {
 835          //  // uint8 i;
 836          //  uint8 datas[8];
 837          
 838          //  cmd_w12864(0x34);
 839          //  cmd_w12864(0x36);
 840          
 841          //  choose12864(0);
 842          //  cmd_w12864(0x40 | 0);
 843          //  cmd_w12864(0xb8 | 0);
 844          
 845          //  for (i = 0; i < 8; i++)
 846          //  {
 847          //    dat_r12864();
 848          //    datas[i] = dat_r12864() | 0x80;
 849          //  }
 850          
 851          //  cmd_w12864(0x40 | 0);
 852          //  cmd_w12864(0xb8 | 3);
 853          //  for (i = 0; i < 8; i++)
 854          //  {
 855          //    dat_w12864(datas[i]);
C51 COMPILER V9.60.7.0   LCD12864                                                          06/16/2023 15:46:52 PAGE 15  

 856          //  }
 857          
 858          //  cmd_w12864(0x30);
 859          // }
 860          
 861          // void play8(uint8 x, uint8 y, uint8 *addr)
 862          // {
 863          //  uint8 i;
 864          
 865          //  // x>63ÔºåËØ¥Êòé x Âú®Âè≥ËæπÔºåÈÄâÊã©Âè≥Â±è
 866          //  if (x > 63)
 867          //  {
 868          //    choose12864(1);
 869          //    x = x - 64;
 870          //  }
 871          //  else
 872          //    choose12864(0);
 873          
 874          //  // ÂÜôÂÖ• x,y ‰ΩçÁΩÆ
 875          //  cmd_w12864(0x40 | x);
 876          //  cmd_w12864(0xb8 | (y++));
 877          
 878          //  // Á°Æ‰øù y Á¨¨ÂÖ´‰Ωç‰∏∫ 0
 879          //  if ((y & 0x80) == 0)
 880          //    // ÂÜôÂÖ• 8 ‰∏™ 8 ‰ΩçÁöÑ 16 ËøõÂà∂Êï∞ÊçÆ
 881          //    for (i = 0; i < 8; i++)
 882          //      dat_w12864(*addr++);
 883          //  else
 884          //    for (i = 0; i < 8; i++)
 885          //      dat_w12864(0xFF - *addr++);
 886          
 887          //  // ÂÜôÂÖ• x, y + 1
 888          //  cmd_w12864(0x40 | x);
 889          //  cmd_w12864(0xb8 | y);
 890          
 891          //  if ((y & 0x80) == 0)
 892          //    for (i = 0; i < 8; i++)
 893          //      dat_w12864(*addr++);
 894          //  else
 895          //    for (i = 0; i < 8; i++)
 896          //      dat_w12864(0xFF - *addr++);
 897          // }
 898          
 899          // void play16(uint8 x, uint8 y, uint8 *addr)
 900          // {
 901          //  uint8 i;
 902          
 903          //  if (x > 63)
 904          //  {
 905          //    choose12864(1);
 906          //    x = x - 64;
 907          //  }
 908          //  else
 909          //    choose12864(0);
 910          
 911          //  cmd_w12864(0x40 | x);
 912          //  cmd_w12864(0xb8 | (y++));
 913          
 914          //  if ((y & 0x80) == 0)
 915          //    for (i = 0; i < 16; i++)
 916          //      dat_w12864(*addr++);
 917          //  else
C51 COMPILER V9.60.7.0   LCD12864                                                          06/16/2023 15:46:52 PAGE 16  

 918          //    for (i = 0; i < 16; i++)
 919          //      dat_w12864(0xFF - *addr++);
 920          
 921          //  cmd_w12864(0x40 | x);
 922          //  cmd_w12864(0xb8 | y);
 923          
 924          //  if ((y & 0x80) == 0)
 925          //    for (i = 0; i < 16; i++)
 926          //      dat_w12864(*addr++);
 927          //  else
 928          //    for (i = 0; i < 16; i++)
 929          //      dat_w12864(0xFF - *addr++);
 930          // }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   4073    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      11
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
