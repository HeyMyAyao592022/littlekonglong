C51 COMPILER V9.60.7.0   LCD12864                                                          06/13/2023 20:53:37 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD12864
OBJECT MODULE PLACED IN .\Objects\lcd12864.obj
COMPILER INVOKED BY: D:\2023stuffs\Keil\C51\BIN\C51.EXE lcd12864.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\L
                    -istings\lcd12864.lst) TABS(2) OBJECT(.\Objects\lcd12864.obj)

line level    source

   1          /*
   2           * LCD128*64
   3           */
   4          
   5          #include "lcd12864.h"
   6          
   7          /// @brief ËæÖÂä©ÊòæÁ§∫ÂõæÁâáÁöÑÂÜÖÂ≠ò
   8          uint8 seg1[16] = {0x00};
   9          uint8 seg2[16] = {0x00};
  10          uint8 seg3[16] = {0x00};
  11          
  12          void chekbusy12864(void)
  13          {
  14   1        uint8 dat;
  15   1      
  16   1        RS = 0;
  17   1        RW = 1;
  18   1        do
  19   1        {
  20   2          P2 = 0;
  21   2          E = 1;
  22   2          _nop_();
  23   2          dat = P2 & 0x80;
  24   2          E = 0;
  25   2        } while (dat != 0);
  26   1      }
  27          
  28          void choose12864(uint8 i)
  29          {
  30   1        switch (i)
  31   1        {
  32   2        case 0:
  33   2          CS1 = 0;
  34   2          CS2 = 1;
  35   2          break;
  36   2        case 1:
  37   2          CS1 = 1;
  38   2          CS2 = 0;
  39   2          break;
  40   2      
  41   2        default:
  42   2          break;
  43   2        }
  44   1      }
  45          
  46          void cmd_w12864(uint8 cmd)
  47          {
  48   1        chekbusy12864();
  49   1      
  50   1        RS = 0;
  51   1        RW = 0;
  52   1        _nop_();
  53   1        E = 1;
  54   1        _nop_();
C51 COMPILER V9.60.7.0   LCD12864                                                          06/13/2023 20:53:37 PAGE 2   

  55   1        P2 = cmd;
  56   1        _nop_();
  57   1        E = 0;
  58   1      }
  59          
  60          void dat_w12864(uint8 dat)
  61          {
  62   1        chekbusy12864();
  63   1      
  64   1        RS = 1;
  65   1        RW = 0;
  66   1        _nop_();
  67   1        E = 1;
  68   1        _nop_();
  69   1        P2 = dat;
  70   1        _nop_();
  71   1        E = 0;
  72   1      }
  73          
  74          void clear12864(void)
  75          {
  76   1        uint8 page, row;
  77   1      
  78   1        // ÈÄâÊã©Â∑¶Â±è
  79   1        choose12864(0);
  80   1        // ÈÅçÂéÜ 8 È°µ
  81   1        for (page = 0; page < 8; page++)
  82   1        {
  83   2          cmd_w12864(0xb8 + page);
  84   2          cmd_w12864(0x40);
  85   2          for (row = 0; row < 64; row++)
  86   2          {
  87   3      
  88   3            dat_w12864(0x00);
  89   3          }
  90   2        }
  91   1      
  92   1        choose12864(1);
  93   1        for (page = 0; page < 8; page++)
  94   1        {
  95   2          cmd_w12864(0xb8 + page);
  96   2          cmd_w12864(0x40);
  97   2          for (row = 0; row < 64; row++)
  98   2          {
  99   3            dat_w12864(0x00);
 100   3          }
 101   2        }
 102   1      }
 103          
 104          void LCD_init(void)
 105          {
 106   1        chekbusy12864();
 107   1        cmd_w12864(0xc0);
 108   1        cmd_w12864(0x3f);
 109   1        clear12864();
 110   1      }
 111          
 112          void play8(uint8 x, uint8 y, uint8 *addr)
 113          {
 114   1        uint8 i;
 115   1      
 116   1        // x>63ÔºåËØ¥Êòé x Âú®Âè≥ËæπÔºåÈÄâÊã©Âè≥Â±è
C51 COMPILER V9.60.7.0   LCD12864                                                          06/13/2023 20:53:37 PAGE 3   

 117   1        if (x > 63)
 118   1        {
 119   2          choose12864(1);
 120   2          x = x - 64;
 121   2        }
 122   1        else
 123   1          choose12864(0);
 124   1      
 125   1        // ÂÜôÂÖ• x,y ‰ΩçÁΩÆ
 126   1        cmd_w12864(0x40 | x);
 127   1        cmd_w12864(0xb8 | (y++));
 128   1      
 129   1        // Á°Æ‰øù y Á¨¨ÂÖ´‰Ωç‰∏∫ 0
 130   1        if ((y & 0x80) == 0)
 131   1          // ÂÜôÂÖ• 8 ‰∏™ 8 ‰ΩçÁöÑ 16 ËøõÂà∂Êï∞ÊçÆ
 132   1          for (i = 0; i < 8; i++)
 133   1            dat_w12864(*addr++);
 134   1        else
 135   1          for (i = 0; i < 8; i++)
 136   1            dat_w12864(0xFF - *addr++);
 137   1      
 138   1        // ÂÜôÂÖ• x, y + 1
 139   1        cmd_w12864(0x40 | x);
 140   1        cmd_w12864(0xb8 | y);
 141   1      
 142   1        if ((y & 0x80) == 0)
 143   1          for (i = 0; i < 8; i++)
 144   1            dat_w12864(*addr++);
 145   1        else
 146   1          for (i = 0; i < 8; i++)
 147   1            dat_w12864(0xFF - *addr++);
 148   1      }
 149          
 150          void play16(uint8 x, uint8 y, uint8 *addr)
 151          {
 152   1        uint8 i;
 153   1      
 154   1        if (x > 63)
 155   1        {
 156   2          choose12864(1);
 157   2          x = x - 64;
 158   2        }
 159   1        else
 160   1          choose12864(0);
 161   1      
 162   1        cmd_w12864(0x40 | x);
 163   1        cmd_w12864(0xb8 | (y++));
 164   1      
 165   1        if ((y & 0x80) == 0)
 166   1          for (i = 0; i < 16; i++)
 167   1            dat_w12864(*addr++);
 168   1        else
 169   1          for (i = 0; i < 16; i++)
 170   1            dat_w12864(0xFF - *addr++);
 171   1      
 172   1        cmd_w12864(0x40 | x);
 173   1        cmd_w12864(0xb8 | y);
 174   1      
 175   1        if ((y & 0x80) == 0)
 176   1          for (i = 0; i < 16; i++)
 177   1            dat_w12864(*addr++);
 178   1        else
C51 COMPILER V9.60.7.0   LCD12864                                                          06/13/2023 20:53:37 PAGE 4   

 179   1          for (i = 0; i < 16; i++)
 180   1            dat_w12864(0xFF - *addr++);
 181   1      }
 182          
 183          void drawBlock(uint8 x, uint8 y)
 184          {
 185   1        int8 screen_y = y / 8; // ÁÆóÂá∫ y ÂØπÂ∫îÂ±èÂπïÁöÑ y ÂùêÊ†á
 186   1        int8 offset_y = y % 8; // ÁÆóÂá∫ y ÂØπ screen_y ÁöÑÂÅèÁßª
 187   1      
 188   1        uint8 blockDot = 0xff;
 189   1        uint8 i;
 190   1      
 191   1        if (x > 63)
 192   1        {
 193   2          choose12864(1);
 194   2          x = x - 64;
 195   2        }
 196   1        else if (x == 63)
 197   1        {
 198   2          choose12864(1);
 199   2          x = 0;
 200   2        }
 201   1        else
 202   1          choose12864(0);
 203   1      
 204   1        // offset ‰∏∫ 0 Â∞±Ê≠£Â∏∏ÊòæÁ§∫ÂõæÁâá
 205   1        if (!offset_y)
 206   1        {
 207   2          cmd_w12864(0x40 | x);
 208   2          cmd_w12864(0xb8 | screen_y);
 209   2          for (i = 0; i < 16; i++)
 210   2            dat_w12864(blockDot);
 211   2        }
 212   1        // Âê¶ÂàôÔºå‰∏ÄÂº†ÂõæÁâáË¶ÅÊãÜÂàÜÊàê2ÊÆµ
 213   1        else
 214   1        {
 215   2          // ÊûÑÈÄ†Ëøô2ÊÆµÊñ∞Êï∞ÊçÆ
 216   2          for (i = 0; i < 16; i++)
 217   2          {
 218   3            seg1[i] = seg1[i] | (blockDot << offset_y);
 219   3            seg2[i] = (blockDot >> (8 - offset_y));
 220   3          }
 221   2      
 222   2          // ÂÖàÁîªÁ¨¨‰∏ÄÊÆµ
 223   2          cmd_w12864(0x40 | x);
 224   2          cmd_w12864(0xb8 | (screen_y));
 225   2          for (i = 0; i < 16; i++)
 226   2            dat_w12864(seg1[i]);
 227   2      
 228   2          // ÂÜçÁîªÁ¨¨‰∫åÊÆµ
 229   2          cmd_w12864(0x40 | x);
 230   2          cmd_w12864(0xb8 | (screen_y + 1));
 231   2          for (i = 0; i < 16; i++)
 232   2            dat_w12864(seg2[i]);
 233   2      
 234   2          // seg ÈáçÊñ∞ÁΩÆÈõ∂
 235   2          for (i = 0; i < 16; i++)
 236   2          {
 237   3            seg1[i] = 0;
 238   3            seg2[i] = 0;
 239   3          }
 240   2        }
C51 COMPILER V9.60.7.0   LCD12864                                                          06/13/2023 20:53:37 PAGE 5   

 241   1      
 242   1        if ((y - 1) % 8 == 0)
 243   1        {
 244   2          cmd_w12864(0x40 | x);
 245   2          cmd_w12864(0xb8 | (screen_y + 1));
 246   2          for (i = 0; i < 16; i++)
 247   2          {
 248   3            dat_w12864(0x00);
 249   3          }
 250   2        }
 251   1      }
 252          
 253          /**
 254           * @brief
 255           * ÂõæÂÉèÁöÑ y ÂùêÊ†áÂπ∂‰∏çÊòØÂ±èÂπïÁöÑÂÆûÈôÖ y ÂùêÊ†áÔºåÂ±èÂπïÁ∫µÊñπÂêëË¢´ÂàÜ‰∏∫‰∫Ü 8 ÊÆµÔºåÊØèÊÆµÊúâ 8 Ë
             -°åÔºåÂÖ± 64 ‰∏™ÂÉèÁ¥†„ÄÇ
 256           * Êàë‰ª¨ÊØèÊ¨°ÂêëÂ±èÂπïÂÜôÂÖ•‰∏Ä‰∏™ 8‰Ωç16ËøõÂà∂Êï∞ÊçÆÔºåÈÇ£Ëøô‰∏™Êï∞ÊçÆÂ∞±‰ºöÂú®Â±èÂπï‰∏äÂΩ¢Êàê Á∫µÊñπÂê
             -ëÁöÑ8‰∏™Â∞èÁÇπ„ÄÇÔºàÂàöÂ•ΩÊòØ 16x16 ÂõæÂÉèÈ´òÂ∫¶ÁöÑ‰∏ÄÂçäÔºâ
 257           * ‰∏ÄËà¨Êàë‰ª¨Ë¶ÅÂú® Ôºàscreen_x,screen_y) ÁöÑÂú∞ÊñπÂÜôÂÖ• 16x16 ÁöÑÂõæÁâáÔºå
 258           * ÈÉΩÊòØÂÖàÂú® (screen_x,screen_y)ÂÜô‰∏äÂçäÈÉ®ÂàÜÔºåÂÜôÂÖ• 8 ‰∏™8‰Ωç16ËøõÂà∂Êï∞ÊçÆÔºåÊûÑÊàêÂõæÂÉèÁöÑ‰∏äÂç
             -äÈÉ®ÂàÜÔºå
 259           * ÁÑ∂ÂêéÂÜçÂú® (screen_x,screen_y + 1)ÂÜôÂÖ•‰∏ãÂçäÈÉ®ÂàÜ„ÄÇ
 260           * ÂÅáÂ¶ÇÂõæÂÉèÁöÑ y ÂùêÊ†áÂàöÂ•ΩÊòØ 8 ÁöÑÂÄçÊï∞ÔºåÊØîÂ¶Ç 16ÔºåÈÇ£ 16x16 ÁöÑÂõæÂÉèÂàöÂ•ΩÂèØ‰ª•Ë¢´ÊîæÂú®Â±è
             -Âπï y ÂùêÊ†á‰∏∫ 2 ÁöÑ‰ΩçÁΩÆ„ÄÇ
 261           * Â¶ÇÊûúÂõæÂÉèÁöÑ y ÂùêÊ†á‰∏çÊòØ 8 ÁöÑÂÄçÊï∞ÔºåÊØîÂ¶Ç 18ÔºåÈÇ£Êàë‰ª¨Â∞±ÈúÄË¶ÅÊääÂõæÂÉèÂàÜÊàê 3 ÊÆµÔºåÂπ∂È
             -ÄöËøáË¥üË¥£ÁöÑËøêÁÆóÊääÂõæÂÉèÊîæÂà∞Â±èÂπï‰∏ä„ÄÇ
 262           *
 263           * @param x 0~127
 264           * @param y 0~63
 265           * @param addr
 266           * @param dir_horizon
 267           * @param dir_vertical
 268           */
 269          void drawKonglong(uint8 x, uint8 y, uint8 *addr, int8 dir_horizon, int8 dir_vertical)
 270          {
 271   1        int8 screen_y = y / 8; // ÁÆóÂá∫ y ÂØπÂ∫îÂ±èÂπïÁöÑ y ÂùêÊ†á
 272   1        int8 offset_y = y % 8; // ÁÆóÂá∫ y ÂØπ screen_y ÁöÑÂÅèÁßª
 273   1      
 274   1        uint8 i;
 275   1        uint8 crossingScreen = 0;
 276   1      
 277   1        // Âà§Êñ≠Â∞èÊÅêÈæôÊòØÂê¶Âú®Ê®™Ë∑®Â∑¶Âè≥Â±èÂπï
 278   1        if (x > 47 && x < 63)
 279   1        {
 280   2          switch (dir_horizon)
 281   2          {
 282   3          case DIR_LEFT:
 283   3            crossingScreen = 1; // Ë°®Á§∫Â∞èÊÅêÈæôÊ≠£Âú®‰ªéÂè≥ÂêëÂ∑¶Ë∑®Â±è
 284   3            break;
 285   3          case DIR_RIGHT:
 286   3            crossingScreen = 2; // Ë°®Á§∫Â∞èÊÅêÈæôÊ≠£Âú®‰ªéÂ∑¶ÂêëÂè≥Ë∑®Â±è
 287   3            break;
 288   3          default:
 289   3            break;
 290   3          }
 291   2        }
 292   1      
 293   1        // ÈÄâÊã©Â±èÂπï
 294   1        // Â∑¶Â±èÂπïÂæÄÂè≥ÁöÑËæπÁïå
 295   1        if (x == 63 && dir_horizon == DIR_RIGHT)
 296   1        {
 297   2          choose12864(1);
C51 COMPILER V9.60.7.0   LCD12864                                                          06/13/2023 20:53:37 PAGE 6   

 298   2          x = 0;
 299   2        }
 300   1        // Âè≥Â±èÂπïÂæÄÂ∑¶ÁöÑËæπÁïå
 301   1        else if (x == 47 && dir_horizon == DIR_LEFT)
 302   1        {
 303   2          choose12864(0);
 304   2          x = 47;
 305   2        }
 306   1        // x Ë∂ÖËøá63ÔºåËØ¥ÊòéÂú®Âè≥Â±èÂπï
 307   1        else if (x > 63)
 308   1        {
 309   2          choose12864(1);
 310   2          x = x - 64;
 311   2        }
 312   1        // Â¶ÇÊûúÂ∞è‰∫é 63 ÂèàÂ§ß‰∫é 47Ôºå‰∏îÂêëÂ∑¶ÔºåÂàôËØ¥ÊòéÂú®Áî±Âè≥ÂæÄÂ∑¶Ê®™Ë∑®Â±èÂπï
 313   1        else if (crossingScreen == 1)
 314   1        {
 315   2          choose12864(1);
 316   2          // Âú®Ëøô‰∏™ÁâπÊÆäÊÉÖÂÜµ‰∏ãÔºåxÊòØË¥üÊï∞
 317   2          x = x - 63;
 318   2        }
 319   1        else
 320   1          choose12864(0);
 321   1      
 322   1        // offset ‰∏∫ 0 Â∞±Ê≠£Â∏∏ÊòæÁ§∫ÂõæÁâá
 323   1        if (!offset_y)
 324   1        {
 325   2          // Â¶ÇÊûúÂ∞èÊÅêÈæôÊ≠£Âú®Ê®™Ë∑®Â∑¶Âè≥Â±èÂπïÔºåÈÇ£ÈúÄË¶ÅÁâπÊÆäÂ§ÑÁêÜ
 326   2          switch (crossingScreen)
 327   2          {
 328   3          case 0: // ‰∏çË∑®Â±è
 329   3            // ÂêëÂè≥ÁßªÂä®ÂíåÂêëÂ∑¶ÁßªÂä®‰∏çÂêå
 330   3            cmd_w12864(0x40 | x);
 331   3            cmd_w12864(0xb8 | screen_y);
 332   3            if (dir_horizon == DIR_RIGHT)
 333   3              for (i = 0; i < 16; i++)
 334   3                dat_w12864(addr[i]);
 335   3            else
 336   3              for (i = 0; i < 16; i++)
 337   3                dat_w12864(addr[15 - i]);
 338   3            break;
 339   3          case 1: // Âè≥Ë∑®Â∑¶
 340   3            // ÂêëÂè≥ÁßªÂä®ÂíåÂêëÂ∑¶ÁßªÂä®‰∏çÂêå
 341   3            cmd_w12864(0x40);
 342   3            cmd_w12864(0xb8 | screen_y);
 343   3            for (i = 16 + x; i < 16; i++)
 344   3              dat_w12864(addr[15 - i]);
 345   3            break;
 346   3            break;
 347   3          case 2: // Â∑¶Ë∑®Âè≥
 348   3            // ÂêëÂè≥ÁßªÂä®ÂíåÂêëÂ∑¶ÁßªÂä®‰∏çÂêå
 349   3            cmd_w12864(0x40 | x);
 350   3            cmd_w12864(0xb8 | screen_y);
 351   3            for (i = 0; i < 63 - x; i++)
 352   3              dat_w12864(addr[i]);
 353   3            break;
 354   3          default:
 355   3            break;
 356   3          }
 357   2      
 358   2          // ‰∏ãÂçäÈÉ®ÂàÜ
 359   2          // Â§ÑÁêÜË∑®Â±è
C51 COMPILER V9.60.7.0   LCD12864                                                          06/13/2023 20:53:37 PAGE 7   

 360   2          switch (crossingScreen)
 361   2          {
 362   3          case 0: // ‰∏çË∑®Â±è
 363   3            cmd_w12864(0x40 | x);
 364   3            cmd_w12864(0xb8 | (screen_y + 1));
 365   3            // ÂêëÂè≥ÁßªÂä®ÂíåÂêëÂ∑¶ÁßªÂä®‰∏çÂêå
 366   3            if (dir_horizon == DIR_RIGHT)
 367   3              for (i = 0; i < 16; i++)
 368   3                dat_w12864(addr[i + 16]);
 369   3            else
 370   3              for (i = 0; i < 16; i++)
 371   3                dat_w12864(addr[31 - i]);
 372   3            break;
 373   3          case 1: // Âè≥Ë∑®Â∑¶
 374   3            cmd_w12864(0x40 | 0);
 375   3            cmd_w12864(0xb8 | (screen_y + 1));
 376   3            for (i = 16 + x; i < 16; i++)
 377   3              dat_w12864(addr[31 - i]);
 378   3            break;
 379   3          case 2: // Â∑¶Ë∑®Âè≥
 380   3            cmd_w12864(0x40 | x);
 381   3            cmd_w12864(0xb8 | (screen_y + 1));
 382   3            for (i = 0; i < 63 - x; i++)
 383   3              dat_w12864(addr[i + 16]);
 384   3            break;
 385   3          default:
 386   3            break;
 387   3          }
 388   2        }
 389   1        // Âê¶ÂàôÔºå‰∏ÄÂº†ÂõæÁâáË¶ÅÊãÜÂàÜÊàê3ÊÆµ
 390   1        else
 391   1        {
 392   2          // ÊûÑÈÄ†Ëøô3ÊÆµÊñ∞Êï∞ÊçÆ
 393   2          for (i = 0; i < 16; i++)
 394   2          {
 395   3            seg1[i] = seg1[i] | (addr[i] << offset_y);
 396   3            seg2[i] = (addr[i] >> (8 - offset_y)) | (addr[i + 16] << offset_y);
 397   3            seg3[i] = addr[i + 16] >> (8 - offset_y);
 398   3          }
 399   2      
 400   2          switch (crossingScreen)
 401   2          {
 402   3          case 0: // Ê≤°ÊúâÊ®™Ë∑®Â±èÂπï
 403   3            // ÂêëÂè≥ÁßªÂä®ÂíåÂêëÂ∑¶ÁßªÂä®‰∏çÂêå
 404   3            if (dir_horizon == DIR_RIGHT)
 405   3            {
 406   4              // ÂÖàÁîªÁ¨¨‰∏ÄÊÆµ
 407   4              cmd_w12864(0x40 | x);
 408   4              cmd_w12864(0xb8 | screen_y);
 409   4              for (i = 0; i < 16; i++)
 410   4                dat_w12864(seg1[i]);
 411   4      
 412   4              // ÂÜçÁîªÁ¨¨‰∫åÊÆµ
 413   4              cmd_w12864(0x40 | x);
 414   4              cmd_w12864(0xb8 | (screen_y + 1));
 415   4              for (i = 0; i < 16; i++)
 416   4                dat_w12864(seg2[i]);
 417   4      
 418   4              // ÂÜçÁîªÁ¨¨‰∏âÊÆµ
 419   4              cmd_w12864(0x40 | x);
 420   4              cmd_w12864(0xb8 | (screen_y + 2));
 421   4              for (i = 0; i < 16; i++)
C51 COMPILER V9.60.7.0   LCD12864                                                          06/13/2023 20:53:37 PAGE 8   

 422   4                dat_w12864(seg3[i]);
 423   4              break;
 424   4            }
 425   3            else
 426   3            {
 427   4              // ÂÖàÁîªÁ¨¨‰∏ÄÊÆµ
 428   4              cmd_w12864(0x40 | x);
 429   4              cmd_w12864(0xb8 | screen_y);
 430   4              for (i = 0; i < 16; i++)
 431   4                dat_w12864(seg1[15 - i]);
 432   4      
 433   4              // ÂÜçÁîªÁ¨¨‰∫åÊÆµ
 434   4              cmd_w12864(0x40 | x);
 435   4              cmd_w12864(0xb8 | (screen_y + 1));
 436   4              for (i = 0; i < 16; i++)
 437   4                dat_w12864(seg2[15 - i]);
 438   4      
 439   4              // ÂÜçÁîªÁ¨¨‰∏âÊÆµ
 440   4              cmd_w12864(0x40 | x);
 441   4              cmd_w12864(0xb8 | (screen_y + 2));
 442   4              for (i = 0; i < 16; i++)
 443   4                dat_w12864(seg3[15 - i]);
 444   4              break;
 445   4            }
 446   3      
 447   3          case 1: // Âè≥Ë∑®Â∑¶
 448   3            cmd_w12864(0x40);
 449   3            cmd_w12864(0xb8 | screen_y);
 450   3            for (i = 63 - x; i < 16; i++)
 451   3              dat_w12864(seg1[16 - i]);
 452   3      
 453   3            // ÂÜçÁîªÁ¨¨‰∫åÊÆµ
 454   3            cmd_w12864(0x40);
 455   3            cmd_w12864(0xb8 | (screen_y + 1));
 456   3            for (i = 63 - x; i < 16; i++)
 457   3              dat_w12864(seg2[16 - i]);
 458   3      
 459   3            // ÂÜçÁîªÁ¨¨‰∏âÊÆµ
 460   3            cmd_w12864(0x40);
 461   3            cmd_w12864(0xb8 | (screen_y + 2));
 462   3            for (i = 63 - x; i < 16; i++)
 463   3              dat_w12864(seg3[16 - i]);
 464   3      
 465   3            break;
 466   3          case 2: // Â∑¶Ë∑®Âè≥
 467   3            // ÂÖàÁîªÁ¨¨‰∏ÄÊÆµ
 468   3            cmd_w12864(0x40 | x);
 469   3            cmd_w12864(0xb8 | screen_y);
 470   3            for (i = 0; i < 63 - x; i++)
 471   3              dat_w12864(seg1[i]);
 472   3      
 473   3            // ÂÜçÁîªÁ¨¨‰∫åÊÆµ
 474   3            cmd_w12864(0x40 | x);
 475   3            cmd_w12864(0xb8 | (screen_y + 1));
 476   3            for (i = 0; i < 63 - x; i++)
 477   3              dat_w12864(seg2[i]);
 478   3      
 479   3            // ÂÜçÁîªÁ¨¨‰∏âÊÆµ
 480   3            cmd_w12864(0x40 | x);
 481   3            cmd_w12864(0xb8 | (screen_y + 2));
 482   3            for (i = 0; i < 63 - x; i++)
 483   3              dat_w12864(seg3[i]);
C51 COMPILER V9.60.7.0   LCD12864                                                          06/13/2023 20:53:37 PAGE 9   

 484   3            break;
 485   3      
 486   3          default:
 487   3            break;
 488   3          }
 489   2      
 490   2          // seg ÈáçÊñ∞ÁΩÆÈõ∂
 491   2          for (i = 0; i < 16; i++)
 492   2          {
 493   3            seg1[i] = 0;
 494   3            seg2[i] = 0;
 495   3            seg3[i] = 0;
 496   3          }
 497   2        }
 498   1      
 499   1        // Ê∏ÖÈô§ÊÆãÂΩ±
 500   1        switch (dir_vertical)
 501   1        {
 502   2        case DIR_DOWN:
 503   2          if ((y + 1) % 8 == 0)
 504   2          {
 505   3            cmd_w12864(0x40 | x);
 506   3            cmd_w12864(0xb8 | (screen_y));
 507   3            for (i = 0; i < 16; i++)
 508   3            {
 509   4              dat_w12864(0x00);
 510   4            }
 511   3          }
 512   2          break;
 513   2        case DIR_UP:
 514   2          if ((y - 1) % 8 == 0)
 515   2          {
 516   3            cmd_w12864(0x40 | x);
 517   3            cmd_w12864(0xb8 | (screen_y + 1));
 518   3            for (i = 0; i < 16; i++)
 519   3            {
 520   4              dat_w12864(0x00);
 521   4            }
 522   3          }
 523   2          break;
 524   2      
 525   2        default:
 526   2          break;
 527   2        }
 528   1      }
 529          
 530          void clearObject(uint8 x, uint8 y)
 531          {
 532   1        int8 screen_y = y / 8;     // ÁÆóÂá∫ y ÂØπÂ∫îÂ±èÂπïÁöÑ y ÂùêÊ†á
 533   1        int8 offset_y = 8 - (y % 8); // ÁÆóÂá∫ y ÂØπ screen_y ÁöÑÂÅèÁßª
 534   1      
 535   1        uint8 i;
 536   1        uint8 crossingScreen = 0;
 537   1      
 538   1        if (x > 63)
 539   1        {
 540   2          choose12864(1);
 541   2          x = x - 64;
 542   2        }
 543   1        else if (x == 63)
 544   1        {
 545   2          choose12864(1);
C51 COMPILER V9.60.7.0   LCD12864                                                          06/13/2023 20:53:37 PAGE 10  

 546   2          x = 0;
 547   2        }
 548   1        else
 549   1          choose12864(0);
 550   1      
 551   1        // offset ‰∏∫ 0 Â∞±Ê≠£Â∏∏Ê∏ÖÈô§ÂõæÁâá
 552   1        if (!offset_y)
 553   1        {
 554   2      
 555   2          cmd_w12864(0x40 | x);
 556   2          cmd_w12864(0xb8 | screen_y);
 557   2      
 558   2          switch (crossingScreen)
 559   2          {
 560   3          case 0:
 561   3            for (i = 0; i < 16; i++)
 562   3              dat_w12864(0x00);
 563   3            break;
 564   3          case 1:
 565   3            break;
 566   3          case 2:
 567   3            for (i = 0; i < 63 - x; i++)
 568   3              dat_w12864(0x00);
 569   3            break;
 570   3          default:
 571   3            break;
 572   3          }
 573   2      
 574   2          // ‰∏ãÂçäÈÉ®ÂàÜ
 575   2          cmd_w12864(0x40 | x);
 576   2          cmd_w12864(0xb8 | (screen_y + 1));
 577   2      
 578   2          switch (crossingScreen)
 579   2          {
 580   3          case 0:
 581   3            for (i = 0; i < 16; i++)
 582   3              dat_w12864(0x00);
 583   3            break;
 584   3          case 1:
 585   3            break;
 586   3          case 2:
 587   3            for (i = 0; i < 63 - x; i++)
 588   3              dat_w12864(0x00);
 589   3            break;
 590   3          default:
 591   3            break;
 592   3          }
 593   2        }
 594   1        else
 595   1        {
 596   2          cmd_w12864(0x40 | x);
 597   2          cmd_w12864(0xb8 | (screen_y));
 598   2          for (i = 0; i < 16; i++)
 599   2            dat_w12864(0x00);
 600   2      
 601   2          cmd_w12864(0x40 | x);
 602   2          cmd_w12864(0xb8 | (screen_y + 1));
 603   2          for (i = 0; i < 16; i++)
 604   2            dat_w12864(0x00);
 605   2      
 606   2          cmd_w12864(0x40 | x);
 607   2          cmd_w12864(0xb8 | (screen_y + 2));
C51 COMPILER V9.60.7.0   LCD12864                                                          06/13/2023 20:53:37 PAGE 11  

 608   2          for (i = 0; i < 16; i++)
 609   2            dat_w12864(0x00);
 610   2        }
 611   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2135    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     48      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
