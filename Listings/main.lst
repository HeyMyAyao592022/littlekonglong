C51 COMPILER V9.60.7.0   MAIN                                                              06/13/2023 09:48:00 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\2023stuffs\Keil\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          #include "lcd12864.h"
   3          #include "imgarr.h"
   4          
   5          /**
   6           * @brief 定义小恐龙结构体
   7           *
   8           */
   9          typedef struct KongLong
  10          {
  11            uint8 x, y;        // x,y 坐标
  12            uint8 *image;      // 图像数组
  13            int8 horizon_direction;  // 左右方向，-1 保存水平, 0左 1 右
  14            int8 vertical_direction; // 上下方向, -1 保持垂直，0 上，1下, 2 站在小板块上
  15          
  16          } KongLong; // 把 struct Konglong 定义成了 Konglong
  17          
  18          // 定义一个实例
  19          KongLong konglongBo = {0, 1, img_konglong, DIR_RIGHT, -1};
  20          
  21          /// @brief 一些变量
  22          uint16 counter1 = 0;
  23          uint16 timer0_counter1 = 0;
  24          uint8 konglong_counter1 = 0;
  25          
  26          /**
  27           * @brief 初始化定时器
  28           *
  29           */
  30          void initializeTimer()
  31          {
  32   1        TMOD = 0x01;        // 使用模式一
  33   1        TL0 = (65535 - 9216) % 256; // 10ms 中断一次
  34   1        TH0 = (65535 - 9216) / 256;
  35   1      
  36   1        TR0 = 1; // 定时器0 开始
  37   1        ET0 = 1; // 允许定时器0
  38   1        EA = 1;  // 允许定时
  39   1        PT0 = 0; // 低优先级
  40   1      }
  41          
  42          /**
  43           * @brief 定时器 0
  44           *
  45           */
  46          void onTimer1() interrupt 1
  47          {
  48   1        // counter 用于计数
  49   1        ++timer0_counter1;
  50   1      
  51   1        TH0 = (65535 - 9216) / 256; // 10ms溢出中断
  52   1        TL0 = (65535 - 9216) % 256;
  53   1      
  54   1        // 每50ms
C51 COMPILER V9.60.7.0   MAIN                                                              06/13/2023 09:48:00 PAGE 2   

  55   1        if (timer0_counter1 >= 5)
  56   1        {
  57   2          // 更新小恐龙水平位移
  58   2          switch (konglongBo.horizon_direction)
  59   2          {
  60   3          case 0: // 向左
  61   3            if (konglongBo.x != 0)
  62   3              --konglongBo.x;
  63   3            break;
  64   3          case 1: // 向右
  65   3            if (konglongBo.x != 111)
  66   3              ++konglongBo.x;
  67   3            break;
  68   3          default:
  69   3            break;
  70   3          }
  71   2          // 更新小恐龙垂直位移
  72   2          switch (konglongBo.vertical_direction)
  73   2          {
  74   3          case 0: // 向上
  75   3            ++konglong_counter1;
  76   3            ++konglongBo.y;
  77   3            if (konglong_counter1 == 10)
  78   3            {
  79   4              konglong_counter1 = 0;
  80   4              konglongBo.vertical_direction = 1;
  81   4            }
  82   3            break;
  83   3          case 1: // 向下
  84   3            break;
  85   3          default:
  86   3            break;
  87   3          }
  88   2          // 归零
  89   2          timer0_counter1 = 0;
  90   2        }
  91   1      
  92   1        // TODO: 判断按键是否按下
  93   1      
  94   1        // TODO: 更新小恐龙的横坐标
  95   1      
  96   1        // TODO: 如果小恐龙未站在小板块上，那还需要更新小恐龙的纵坐标
  97   1      
  98   1        // TODO: 生成新的小块
  99   1      }
 100          
 101          /**
 102           * @brief 定时器 1
 103           *
 104           */
 105          void onTimer2()
 106          {
 107   1        // TODO: 更新小板块的坐标
 108   1      
 109   1        // TODO: 判断是否需要更改定时器初值，让小板块越来越快
 110   1      }
 111          
 112          void main(void)
 113          {
 114   1        // 初始化定时器
 115   1        initializeTimer();
 116   1      
C51 COMPILER V9.60.7.0   MAIN                                                              06/13/2023 09:48:00 PAGE 3   

 117   1        // 初始化屏幕
 118   1        LCD_init();
 119   1        delay(5);
 120   1      
 121   1        while (1)
 122   1        {
 123   2          // TODO: 计算绘图地址
 124   2          // TODO: 绘图
 125   2      
 126   2          drawPicture16(konglongBo.x, konglongBo.y, konglongBo.image, konglongBo.horizon_direction, konglongBo.ver
             -tical_direction);
 127   2        }
 128   1      }
 129          
 130          /**
 131           * @brief 毫秒延迟
 132           *
 133           * @param n
 134           */
 135          void delay(uint16 n) // 延时ms级
 136          {
 137   1        uint8 counter;
 138   1        while (n--)
 139   1        {
 140   2          counter = 110;
 141   2          while (--counter)
 142   2            ;
 143   2        }
 144   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    155    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     50    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
